<?xml version="1.0" encoding="UTF-8"?>
<!--
Maven POM (Project Object Model) file
This file defines:
1. Project metadata (name, version, description)
2. Dependencies (libraries your project needs)
3. Build configuration (how to compile and package)
4. Plugins (tools for building, testing, running)
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 
    Parent POM: Spring Boot provides a parent POM that manages:
    - Dependency versions (so you don't need to specify versions)
    - Default configurations
    - Common plugins
    -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.0</version>
        <relativePath/>
    </parent>

    <!-- Project identification -->
    <groupId>com.chatbot</groupId>
    <artifactId>chatbot-service</artifactId>
    <version>1.0.0</version>
    <name>Chatbot Service</name>
    <description>AI Chatbot Service with AWS Bedrock Integration</description>

    <!-- Java version configuration -->
    <properties>
        <java.version>21</java.version>
        <aws.java.sdk.version>2.28.11</aws.java.sdk.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws.java.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- 
        Spring Boot Web Starter: Provides everything needed for web applications
        Includes: Spring MVC, Tomcat server, JSON processing, validation
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- 
        H2 Database: In-memory database for testing
        Will switch to MongoDB later
        -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- 
        Spring Boot JPA Starter: For H2 database
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <!-- 
        MongoDB Spring Data Starter: For MongoDB support
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <!-- 
        Spring Boot Actuator: Production-ready features
        Includes: Health checks, metrics, monitoring endpoints
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- 
        Jackson for JSON processing (included in Spring Boot Web)
        Already included in spring-boot-starter-web
        -->

        <!-- 
        AWS Bedrock Runtime: For Converse API
        -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>bedrockruntime</artifactId>
        </dependency>

        <!-- 
        AWS Bedrock: For listing models
        -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>bedrock</artifactId>
        </dependency>

        <!-- 
        Spring Boot Test Starter: Testing framework
        Includes: JUnit, Mockito, Spring Test
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 
    Build configuration: How Maven builds your project
    -->
    <build>
        <plugins>
            <!-- 
            Spring Boot Maven Plugin: Allows running with 'mvn spring-boot:run'
            Also creates executable JAR files
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>